"""
Django settings for church_management_system project.

Generated by 'django-admin startproject' using Django 5.1.2.
"""

from pathlib import Path
import os
import environ
import logging

# --------------------------
# BASE DIRECTORY
# --------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# --------------------------
# ENVIRONMENT VARIABLES
# --------------------------
env = environ.Env(DEBUG=(bool, False))

# Load the .env file
env_file = os.path.join(BASE_DIR, ".env")
if os.path.exists(env_file):
    environ.Env.read_env(env_file)
else:
    print("‚ö†Ô∏è WARNING: .env file not found. Ensure it exists in the root directory.")

# --------------------------
# SECURITY SETTINGS
# --------------------------
SECRET_KEY = env("SECRET_KEY")
DEBUG = env.bool("DEBUG", default=True)

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "6e54-197-250-99-186.ngrok-free.app"]

CSRF_TRUSTED_ORIGINS = [
    "https://6e54-197-250-99-186.ngrok-free.app"
]


#ALLOWED_HOSTS = ['kkktmkwawa.pythonanywhere.com']

# --------------------------
# INSTALLED APPS
# --------------------------
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    'django.contrib.humanize',

    "accounts",
    "registration",
    "settings",
    "members",
    "leaders",
    "news",
    "notifications",
    "finance",
    "sacraments",
    "properties",
    "sms",
    "churchmember",
    "secretary",
    "accountant",
    "analysis",
    "languages",
    "pastor",
    "evangelist",
    "ai"
]

# --------------------------
# MIDDLEWARE
# --------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "accounts.middleware.LastPathMiddleware",
    'django.middleware.locale.LocaleMiddleware',  # Must be after SessionMiddleware
]

# --------------------------
# URL CONFIGURATION
# --------------------------
ROOT_URLCONF = "church_management_system.urls"
WSGI_APPLICATION = "church_management_system.wsgi.application"

# --------------------------
# DATABASE CONFIGURATION
# --------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("DATABASE_NAME"),
        "USER": env("DATABASE_USER"),
        "PASSWORD": env("DATABASE_PASSWORD"),
        "HOST": env("DATABASE_HOST"),
        "PORT": env("DATABASE_PORT"),
    }
}

# --------------------------
# PASSWORD VALIDATION
# --------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --------------------------
# INTERNATIONALIZATION
# --------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Dar_es_Salaam"
USE_I18N = True
USE_TZ = True

# --------------------------
# STATIC & MEDIA FILES
# --------------------------
STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# --------------------------
# SESSION SETTINGS
# --------------------------
SESSION_COOKIE_SECURE = False  # Set to True if using HTTPS
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 3600  # 1 hour session
SESSION_SAVE_EVERY_REQUEST = True

# --------------------------
# UPLOAD SETTINGS
# --------------------------
DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000  # 500MB

# --------------------------
# AUTHENTICATION MODEL
# --------------------------
AUTH_USER_MODEL = "accounts.CustomUser"

# --------------------------
# BEEM AFRICA API CREDENTIALS
# --------------------------
BEEM_SENDER_NAME = env("BEEM_SENDER_NAME", default="PARISH-MKW")
BEEM_API_KEY = env("BEEM_API_KEY", default="")
BEEM_SECRET_KEY = env("BEEM_SECRET_KEY", default="")

# --------------------------
# LOGGING SETTINGS
# --------------------------
logging.basicConfig(level=logging.DEBUG)

# Debugging: Print API credentials for verification
print(f"üì¢ Loaded BEEM API Key: {BEEM_API_KEY[:5]}****")  # Masking for security
print(f"üì¢ Loaded BEEM Sender Name: {BEEM_SENDER_NAME}")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # Ensure this is correctly set
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# settings.py
LANGUAGE_CODE = 'en'  # default language

USE_I18N = True
USE_L10N = True
USE_TZ = True

# List of languages your site supports, e.g., English, French, Swahili
LANGUAGES = [
    ('en', 'English'),
    ('fr', 'French'),
    ('sw', 'Swahili'),
    # Add more as needed
]

# Tells Django where to store translation files
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

LIBRETRANSLATE_URL = "http://localhost:5000/translate"  # Self-hosted instance
LIBRETRANSLATE_API_KEY = None  # No key needed for local instance


from decouple import config

QWEN_API_KEY = config('QWEN_API_KEY')

# settings.py
from dotenv import load_dotenv
import os

load_dotenv()  # Load environment variables from .env file

DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY")