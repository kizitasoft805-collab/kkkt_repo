# Generated by Django 5.1.4 on 2025-01-16 13:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Leader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name of the church leader.', max_length=255)),
                ('date_of_birth', models.DateField(help_text='Date of birth.')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], help_text='Gender of the leader.', max_length=10)),
                ('phone_number', models.CharField(help_text='Phone number in the format: +255XXXXXXXXX.', max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format: +255XXXXXXXXX (9 digits after +255).', regex='^\\+255\\d{9}$')])),
                ('email', models.EmailField(blank=True, help_text="Email address (must end with '@gmail.com').", max_length=254, null=True, validators=[django.core.validators.RegexValidator(message="Email must be a valid Gmail address and end with '@gmail.com'.", regex='^[a-zA-Z0-9._%+-]+@gmail\\.com$')])),
                ('address', models.TextField(help_text='Full address of the church leader.')),
                ('occupation', models.CharField(choices=[('Parish Priest', 'Parish Priest'), ('Associate Priest', 'Associate Priest'), ('Deacon', 'Deacon'), ('Lay Ministers', 'Lay Ministers'), ('Catechists', 'Catechists'), ('Community Group Leaders', 'Community Group Leaders'), ('Parish Elders', 'Parish Elders'), ('Parish Office Staff', 'Parish Office Staff'), ('Parish Council Member', 'Parish Council Member'), ('Social Ministry Leader', 'Social Ministry Leader'), ('Parish Council Chairperson', 'Parish Council Chairperson'), ('Parish Council Secretary', 'Parish Council Secretary'), ('Parish Treasurer', 'Parish Treasurer'), ('Finance Committee Member', 'Finance Committee Member'), ('Development Committee Leader', 'Development Committee Leader'), ('Choir Leader', 'Choir Leader'), ('Parish Accountant', 'Parish Accountant'), ('Religious Education Leaders', 'Religious Education Leaders'), ('Hospitality Committee Chairperson', 'Hospitality Committee Chairperson'), ('Retreat and Training Committee Member', 'Retreat and Training Committee Member'), ('Youth Committee Members', 'Youth Committee Members'), ("Women's and Men's Committee Members", "Women's and Men's Committee Members")], help_text='Occupation within the church.', max_length=100)),
                ('start_date', models.DateField(help_text='Date when the leader started administration.')),
                ('committee', models.CharField(help_text='The committee where the leader gives service.', max_length=255)),
                ('responsibilities', models.TextField(help_text='Responsibilities assigned to the leader.')),
                ('education_level', models.CharField(help_text='Education level of the leader.', max_length=255)),
                ('religious_education', models.TextField(blank=True, help_text='Religious education the leader has (e.g., theology).', null=True)),
                ('time_in_service', models.CharField(blank=True, help_text='Time the leader has been in service.', max_length=100, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], help_text='Marital status of the leader.', max_length=20)),
                ('spouse_name', models.CharField(blank=True, help_text="Spouse's name (if applicable).", max_length=255, null=True)),
                ('number_of_children', models.CharField(blank=True, help_text='Number of children (if applicable).', max_length=10, null=True)),
                ('emergency_contact_name', models.CharField(help_text='Name of the person to contact during an emergency.', max_length=255)),
                ('emergency_contact_phone', models.CharField(help_text='Phone number of the emergency contact (format: +255XXXXXXXXX).', max_length=13, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format: +255XXXXXXXXX (9 digits after +255).', regex='^\\+255\\d{9}$')])),
                ('talent', models.CharField(blank=True, help_text='Talent that the leader has.', max_length=255, null=True)),
                ('special_interests', models.TextField(blank=True, help_text='Special interests of the leader.', null=True)),
                ('compensation_allowance', models.TextField(blank=True, help_text='Compensations/Allowances (if applicable).', null=True)),
                ('voluntary', models.BooleanField(default=False, help_text='Is this leader serving voluntarily?')),
                ('passport', models.ImageField(blank=True, help_text='Upload the passport photo of the leader.', null=True, upload_to='leader_passports/')),
            ],
        ),
    ]
